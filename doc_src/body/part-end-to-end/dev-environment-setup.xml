<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "urn:pubid:dita4practitioners.com:doctypes:dita:chapter" "chapter.dtd">
<chapter
  id="chapter-id">
  <title>Setting Up Your Development Environment</title>
  <shortdesc>There are many ways to set up a productive DITA development environment. This chapter
    describes a set of tools that works well for me and that I use in describing the tutorials and
    how-to sections in this book.</shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>development environment<indexterm>setting up</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>The development and maintenance of DITA systems requires the following types of tools:<ul>
      <li rev="1.3">An XML-aware editing environment for working with DITA documents, DTDs, RNGs,
          XSDs, XSLT, XQuery, and other XML-specific artifacts. This book recommends the SyncRO Soft
          oXygenXML product for the simple reason that it offers the most functionality at the
          lowest price, reflects excellent engineering quality, excellent service, and the most
          complete DITA implementation of any authoring environment at the time of writing.</li>
      <li rev="1.3">A Java development environment for compiling and deploying Java code (optional).
          Many DITA systems never require the implementation of custom Java code but it can still be
          useful to be able to examine or modify the Java code that underlies the Open Toolkit. If
          you are integrating with a component content management system you will likely need to
          write custom Java code. This book uses the Eclipse IDE, although similar systems, such as
          IntelliJ, are comparable. Eclipse and similar tools can be useful simply as a way to run
          and manage Ant scripts even if you do not do any Java development.</li>
      <li>A Web browser.</li>
      <li>Output-specific viewers, including PDF readers, EPUB readers, Windows help viewers, etc.</li>
      <li rev="1.3">A source code control system, such as git, Subversion, or VCC, for managing your
          projectâ€™s source components. A source code control system can manage DITA content quite
            effectively.<note>You should not use CVS with DITA content because it cannot handle
            Unicode documents properly (CVS is ASCII only).</note></li>
      </ul></p>
    <p>General DITA development and the tutorials in this book require the following specific tools:<ul>
      <li rev="1.3">A Java development kit (SDK), which is required by the DITA Open Toolkit and
          Java development. At the time of writing the latest Java version is Java 8, but Java 7 is
          the minimum version required by most of the tools you will be using. You should use Sun
          (Oracle) Java, as some tool components will not work with other Java distributions. </li>
      <li>The DITA Open Toolkit. Even if your system does not use the Toolkit itself, it is still
          useful for testing and validating DITA processing. The DITA Open Toolkit<indexterm>Open
              Toolkit<indexterm>use in development environment</indexterm></indexterm> is the only
          free, open-source, and cross-platform general-purpose DITA implementation <ph rev="1.3"
            status="deleted">and serves as a reference implementation for the DITA standard (while
            it is not a product of OASIS or the DITA Technical Committee, the Open Toolkit
            developers coordinate with the Technical Committee so that new DITA features are
            implemented as quickly and correctly as possible upon final or near-final approval of
            new versions of the DITA specification)</ph>. Many, if not most, commercial DITA-related
          tools integrate the Open Toolkit. Even if the Toolkit will not be your primary processing
          environment, it is still useful for testing and managing access to document type shells
          and specialization vocabulary modules<indexterm>vocabulary
              module<indexterm>managing</indexterm></indexterm><indexterm>management<indexterm>of
              vocabulary modules</indexterm></indexterm>. You should expect to use the Toolkit for
          that purpose if for no other.</li>
      <li>Apache Ant. Ant<indexterm>Ant<indexterm>use in development
        environment</indexterm></indexterm> is a general-purpose scripting
        system used to manage the building and deployment of software projects.
        It is used by the DITA Open Toolkit and is generally useful for lots of
        tasks. While Ant is included in the main Open Toolkit package, it is
        useful to have a separate standalone copy. </li>
      </ul></p>
  </body>
</chapter>
