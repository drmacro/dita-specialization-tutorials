<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE subsection PUBLIC "urn:pubid:dita4practitioners.com:doctypes:dita:subsection" "subsection.dtd"> 
<subsection id="domain-spec-xsd-step-1">
	<title>Create the new domain elements</title>
	<shortdesc>The new domain module contains the components that define the domain
		elements.</shortdesc>
	<prolog>
		<metadata>
			<keywords>
				<indexterm>element domain specialization<indexterm>RNG syntax</indexterm></indexterm>
				<indexterm>RNG<indexterm>element domain specialization</indexterm></indexterm>
			</keywords>
		</metadata>
	</prolog>
	<body>
		<p>In the <filepath>rng</filepath> directory, create a new file and name it
				<filepath>dbParaDomain.rng</filepath>. Then, in the DITA 1.3 distribution, find the
				<filepath>rng/base</filepath> folder. Copy the following and paste into the file:
			<codeblock>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;?xml-model href="urn:oasis:names:tc:dita:rng:vocabularyModuleDesc.rng"
                         schematypens="http://relaxng.org/ns/structure/1.0"?>
&lt;grammar xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
	xmlns:dita="http://dita.oasis-open.org/architecture/2005/"
	xmlns="http://relaxng.org/ns/structure/1.0"
	datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
	xmlns:sch="http://purl.oclc.org/dsdl/schematron">
	&lt;moduleDesc xmlns="http://dita.oasis-open.org/architecture/2005/">
		&lt;moduleTitle>dbPara Domain&lt;/moduleTitle>
		&lt;headerComment>&lt;![CDATA[
=============================================================
                   HEADER                                    
=============================================================     
 ]]&gt;&lt;/headerComment>
		&lt;moduleMetadata>
			&lt;moduleType>elementdomain&lt;/moduleType>
			&lt;moduleShortName>dbPara-d&lt;/moduleShortName>
			&lt;modulePublicIds>
				&lt;dtdMod>urn:pubid:dtd:elements:dbParaDomain&lt;/dtdMod>
				&lt;dtdEnt>urn:pubid:dtd:entities:dbParaDomain&lt;/dtdEnt>
				&lt;xsdMod>urn:pubid:xsd:dbParaDomain&lt;/xsdMod>
				&lt;rncMod>urn:pubid:rnc:dbParaDomain&lt;/rncMod>
				&lt;rngMod>urn:pubid:rng:dbParaDomain&lt;/rngMod>
			&lt;/modulePublicIds>
			&lt;domainsContribution>(topic dbPara-d)&lt;/domainsContribution>
		&lt;/moduleMetadata>
	&lt;/moduleDesc>
	
&lt;/grammar></codeblock></p>
		<p>Because the <xmlelement>para</xmlelement> element will be an alternative to the default DITA
				<xmlelement>p</xmlelement>, the easiest way to create it is simply to copy and paste the
			components required for the DITA <xmlelement>p</xmlelement>, then make the changes we need. We
			can do the same thing with the DITA <xmlelement>keyword</xmlelement> to create the
				<xmlelement>wordasword</xmlelement>. </p>
		<p>The <xmlelement>p</xmlelement> and <xmlelement>keyword</xmlelement> are defined in
				<filepath>rng/base/commonElementMod.rng</filepath>. Take a look at the file, and note that
			there are six children of the root element, <xmlelement>grammar</xmlelement>: a
				<xmlelement>moduledesc</xmlelement> and five <xmlelement>div</xmlelement>s. </p>
		<p>In that file, find the <xmlelement>div</xmlelement> that contains
				<codeph>&lt;a:documentation>ELEMENT TYPE NAME PATTERNS&lt;/a:documentation></codeph>. Copy
			the opening tag of the <xmlelement>div</xmlelement> and the entire
				<xmlelement>a:documentation</xmlelement> and paste them into
				<filepath>dbParaDomain.rng</filepath> directly after the
			<xmlelement>moduleDesc</xmlelement>, like so:
			<codeblock>&lt;moduleDesc>...&lt;/moduleDesc>
&lt;div>
  &lt;a:documentation>ELEMENT TYPE NAME PATTERNS&lt;/a:documentation>

&lt;/div></codeblock></p>
		<p>Go back to <filepath>commonElementsMod.rng</filepath>, find
			<codeblock>&lt;define name="p">
  &lt;ref name="p.element"/>
&lt;/define></codeblock>and paste
			it into <filepath>dbParaDomain.rng</filepath>:
			<codeblock>&lt;div>
  &lt;a:documentation>ELEMENT TYPE NAME PATTERNS&lt;/a:documentation>
  &lt;define name="p">
    &lt;ref name="p.element"/>
  &lt;/define>
&lt;/div></codeblock></p>
		<p>Change <q>p</q> to <q>para</q> as
			follows:<codeblock>&lt;div>
  &lt;a:documentation>ELEMENT TYPE NAME PATTERNS&lt;/a:documentation>
  &lt;define name="<b>para</b>">
    &lt;ref name="<b>para</b>.element"/>
  &lt;/define>
&lt;/div></codeblock></p>
		<p>Now look for the <xmlelement>div</xmlelement> that contains <codeph>BASIC DOCUMENT ELEMENT
				DECLARATIONS (rich text)</codeph> and note that it contains several child
				<xmlelement>div</xmlelement>s, each containing several components for a single element. Copy
			and paste the opening tag of the <xmlelement>div</xmlelement> and the documentation element
			and paste them into <filepath>dbParaDomain.rng</filepath> and close the
				<xmlelement>div</xmlelement><codeblock>&lt;div>
  &lt;a:documentation>BASIC DOCUMENT ELEMENT DECLARATIONS (rich text) &lt;/a:documentation>

&lt;/div></codeblock>
			Return to <filepath>commonElementsMod.rng</filepath>, find the <xmlelement>div</xmlelement>
			containing <codeph>LONG NAME: Paragraph</codeph>, copy the entire <xmlelement>div</xmlelement>
			and paste it into <filepath>dbParaDomain.rng</filepath>
			<codeblock>&lt;div>
  &lt;a:documentation>BASIC DOCUMENT ELEMENT DECLARATIONS (rich text) &lt;/a:documentation>
    &lt;div>
      &lt;a:documentation>LONG NAME: Paragraph&lt;/a:documentation>
        &lt;define name="p.content">
          &lt;zeroOrMore>
            &lt;ref name="para.cnt"/>
          &lt;/zeroOrMore>
        &lt;/define>
        &lt;define name="p.attributes">
          &lt;ref name="univ-atts"/>
          &lt;optional>
            &lt;attribute name="outputclass"/>
          &lt;/optional>
        &lt;/define>
        &lt;define name="p.element">
          &lt;element name="p" dita:longName="Paragraph">
          &lt;a:documentation>A paragraph element (&amp;lt;p>) is a block of text containing a single main
            idea. Category: Body elements&lt;/a:documentation>
            &lt;ref name="p.attlist"/>
            &lt;ref name="p.content"/>
          &lt;/element>
        &lt;/define>
        &lt;define name="p.attlist" combine="interleave">
          &lt;ref name="p.attributes"/>
        &lt;/define>
  &lt;/div>
&lt;/div></codeblock></p>
		<p>Again, change <q>p</q> to <q>para</q>. Be careful not to change <q>para.cnt</q>.
			<codeblock>&lt;div>
  &lt;a:documentation>LONG NAME: Paragraph&lt;/a:documentation>
  &lt;define name="<b>para</b>.content">
    &lt;zeroOrMore>
      &lt;ref name="para.cnt"/>
    &lt;/zeroOrMore>
  &lt;/define>
  &lt;define name="<b>para</b>.attributes">
    &lt;ref name="univ-atts"/>
    &lt;optional>
      &lt;attribute name="outputclass"/>
    &lt;/optional>
  &lt;/define>
  &lt;define name="<b>para</b>.element">
    &lt;element name="<b>para</b>" dita:longName="DocBook-like Paragraph">
      &lt;a:documentation>This paragraph element (&amp;lt;para>) is an alternative to the DITA
	&amp;lt;p&amp;gt;. Category: Body elements&lt;/a:documentation>
    &lt;ref name="<b>para</b>.attlist"/>
    &lt;ref name="<b>para</b>.content"/>
&lt;/element>
&lt;/define>
&lt;define name="para.attlist" combine="interleave">
   &lt;ref name="para.attributes"/>
  &lt;/define>
&lt;/div></codeblock></p>
		<p>Look back in <filepath>commonElementsMod.rng</filepath> and find the
				<xmlelement>div</xmlelement> containing <codeph>SPECIALIZATION ATTRIBUTE
				DECLARATIONS</codeph>. Again, copy the opening tag of the <xmlelement>div</xmlelement> and
			the entire <xmlelement>a:documentation</xmlelement> element and paste it into your
				<codeph>dbParaDomain.rng</codeph> and close the <xmlelement>div</xmlelement> like so:
			<codeblock>&lt;div>
  &lt;a:documentation>SPECIALIZATION ATTRIBUTE DECLARATIONS&lt;/a:documentation>

&lt;/div></codeblock>Then,
			find the component for the <xmlelement>p</xmlelement>:
			<codeblock>&lt;define name="p.attlist" combine="interleave">
  &lt;ref name="global-atts"/>
  &lt;optional>
    &lt;attribute name="class" a:defaultValue="- topic/p "/>
  &lt;/optional>
&lt;/define></codeblock>Paste
			it into <filepath>dbParaDomain.rng</filepath> and change <q>p</q> to <q>para</q> and add the
			new domain to the <q>class</q> attribute as follows. Change the leading <q>-</q> to <q>+</q>
			and include the trailing
			space.<codeblock>&lt;div>
  &lt;a:documentation>SPECIALIZATION ATTRIBUTE DECLARATIONS&lt;/a:documentation>
  &lt;define name="<b>para</b>.attlist" combine="interleave">
    &lt;ref name="global-atts"/>
    &lt;optional>
      &lt;attribute name="class" a:defaultValue="<b>+</b> topic/p <b>dbPara-d/para </b>"/>
    &lt;/optional>
  &lt;/define>
&lt;/div> </codeblock></p>
		<p>To give users a choice between <xmlelement>p</xmlelement> and <xmlelement>para</xmlelement>,
			you must extend the element type pattern by doing the following. You can find examples of the
			following in any domain module, such as <filepath>highlightDomain.rng</filepath> or
				<filepath>xmlDomain.rng</filepath>, but for our purposes, just copy and paste the following
			into <filepath>dbParaDomain.rng</filepath>. In most examples you see, it is the first element
			following the module description, so paste it there.
			<codeblock>...
&lt;/moduleDesc>
&lt;div>
  &lt;a:documentation>DOMAIN EXTENSION PATTERNS&lt;/a:documentation>
  &lt;define name="dbPara-d-p">
    &lt;choice>
      &lt;ref name="para"/>
    &lt;/choice>
  &lt;/define>
  &lt;define name="p" combine="choice">
    &lt;ref name="dbPara-d-p"/>
  &lt;/define>
&lt;/div>
&lt;div>
...</codeblock></p>
		<p>To repeat the process for <xmlelement>wordasword</xmlelement>, start by adding the domain
			extension as you did with <xmlelement>para</xmlelement>, so the <codeph>DOMAIN EXTENSION
				PATTERNS</codeph>
			<xmlelement>div</xmlelement> looks like:
			<codeblock>&lt;div>
  &lt;a:documentation>DOMAIN EXTENSION PATTERNS&lt;/a:documentation>
  &lt;define name="dbPara-d-p">
    &lt;choice>
      &lt;ref name="para"/>
    &lt;/choice>
  &lt;/define>
  &lt;define name="p" combine="choice">
    &lt;ref name="dbPara-d-p"/>
  &lt;/define>
  <b>&lt;define name="dbPara-d-keyword">
    &lt;choice>
      &lt;ref name="wordasword.element"/>
    &lt;/choice>
  &lt;/define>
  &lt;define name="keyword" combine="choice">
    &lt;ref name="dbPara-d-keyword"/>
  &lt;/define></b>
&lt;/div></codeblock></p>
		<p>Because <xmlelement>keyword</xmlelement> is an inline element instead of a block element, it
			will not appear in exactly the same sections of <filepath>commonElementsMod.rng</filepath> as
				<xmlelement>para</xmlelement>. Instead of the <xmlelement>div</xmlelement> containing
				<codeph>BASIC DOCUMENT ELEMENT DECLARATIONS</codeph>, its definition appears in <codeph>BASE
				FORM PHRASE TYPES</codeph>. If you want to preserve the nesting and be especially neat, you
			can preserve the opening tag for the<xmlelement>div</xmlelement> and paste it into
				<filepath>dbParaDomain.rng</filepath>, but whatever you do, watch your nesting or your file
			will not be well-formed. You should have definitions for:<ul id="ul_rgj_s3n_mkb">
				<li><codeph>&lt;define name="keyword.content"></codeph></li>
				<li><codeph>&lt;define name="keyword.attributes"></codeph></li>
				<li><codeph>&lt;define name="keyword.element"></codeph></li>
				<li><codeph>&lt;define name="keyword.attlist"></codeph></li>
			</ul></p>
		<p>Copy and paste into <filepath>dbParaDomain.rng</filepath> and make the following changes
				<b>shown in
			bold</b>:<codeblock>&lt;div>
  &lt;a:documentation> BASE FORM PHRASE TYPES&lt;/a:documentation>
  &lt;div>
    &lt;a:documentation>LONG NAME: <b>Word as Word</b>&lt;/a:documentation>
    &lt;define name="<b>wordasword</b>.content">
      &lt;zeroOrMore>
        &lt;choice>
          &lt;text/>
          &lt;ref name="draft-comment" dita:since="1.3"/>
          &lt;ref name="required-cleanup" dita:since="1.3"/>
          &lt;ref name="text"/>
          &lt;ref name="tm"/>
        &lt;/choice>
      &lt;/zeroOrMore>
    &lt;/define>
    &lt;define name="<b>wordasword</b>.attributes">
      &lt;optional>
        &lt;attribute name="keyref"/>
      &lt;/optional>
      &lt;ref name="univ-atts"/>
      &lt;optional>
        &lt;attribute name="outputclass"/>
      &lt;/optional>
    &lt;/define>
    &lt;define name="<b>wordasword</b>.element">
      &lt;element name="<b>wordasword</b>" dita:longName="<b>Word as Word</b>">
        &lt;a:documentation>The &amp;lt;<b>wordasword</b>> element identifies <b>a word as a word, 
          apart from any meaning it may have.</b> Category: Body elements&lt;/a:documentation>
        &lt;ref name="<b>wordasword</b>.attlist"/>
        &lt;ref name="<b>wordasword</b>.content"/>
      &lt;/element>
    &lt;/define>
    &lt;define name="<b>wordasword</b>.attlist" combine="interleave">
      &lt;ref name="<b>wordasword</b>.attributes"/>
    &lt;/define>
  &lt;/div>
&lt;/div></codeblock></p>
		<p>In the <xmlelement>div</xmlelement> containing <codeph>SPECIALIZATION ATTRIBUTE
				DECLARATIONS</codeph>, add the <xmlatt>class</xmlatt> as follows:
			<codeblock>&lt;div>
  &lt;a:documentation>SPECIALIZATION ATTRIBUTE DECLARATIONS&lt;/a:documentation>
  &lt;define name="para.attlist" combine="interleave">
    &lt;ref name="global-atts"/>
    &lt;optional>
      &lt;attribute name="class" a:defaultValue="+ topic/p dbPara-d/para "/>
    &lt;/optional>
  &lt;/define>
<b>  &lt;define name="wordasword.attlist" combine="interleave">
    &lt;ref name="global-atts"/>
    &lt;optional>
      &lt;attribute name="class" a:defaultValue="+ topic/keyword dbPara-d/wordasword "/>
    &lt;/optional>
  &lt;/define></b>
&lt;/div></codeblock></p>
		<p>Check your file for well-formedness and validity. If it is not well-formed and valid, retrace
			your steps until it is. When you have a well-formed file, integrate the new domain into your
			concept shell. If all else fails, you can copy and paste the example
			here.<codeblock>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;?xml-model href="urn:oasis:names:tc:dita:rng:vocabularyModuleDesc.rng" 
  schematypens="http://relaxng.org/ns/structure/1.0"?>
&lt;grammar xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
  xmlns:dita="http://dita.oasis-open.org/architecture/2005/"
  xmlns="http://relaxng.org/ns/structure/1.0"
  datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
  xmlns:sch="http://purl.oclc.org/dsdl/schematron">
  &lt;moduleDesc xmlns="http://dita.oasis-open.org/architecture/2005/">
  &lt;moduleTitle>dbPara Domain&lt;/moduleTitle>
    &lt;headerComment>&lt;![CDATA[
=============================================================
                   HEADER                                    
=============================================================     
 ]]&gt;&lt;/headerComment>
   &lt;moduleMetadata>
      &lt;moduleType>elementdomain&lt;/moduleType>
      &lt;moduleShortName>dbPara-d&lt;/moduleShortName>
      &lt;modulePublicIds>
        &lt;dtdMod>urn:pubid:dtd:elements:dbParaDomain&lt;/dtdMod>
        &lt;dtdEnt>urn:pubid:dtd:entities:dbParaDomain&lt;/dtdEnt>
        &lt;xsdMod>urn:pubid:xsd:dbParaDomain&lt;/xsdMod>
        &lt;rncMod>urn:pubid:rnc:dbParaDomain&lt;/rncMod>
        &lt;rngMod>urn:pubid:rng:dbParaDomain&lt;/rngMod>
      &lt;/modulePublicIds>
      &lt;domainsContribution>(topic dbPara-d)&lt;/domainsContribution>
    &lt;/moduleMetadata>
  &lt;/moduleDesc>
  &lt;div>
    &lt;a:documentation>DOMAIN EXTENSION PATTERNS&lt;/a:documentation>
    &lt;define name="dbPara-d-p">
      &lt;choice>
        &lt;ref name="para"/>
      &lt;/choice>
    &lt;/define>
    &lt;define name="p" combine="choice">
      &lt;ref name="dbPara-d-p"/>
    &lt;/define>
    &lt;define name="dbPara-d-keyword">
      &lt;choice>
        &lt;ref name="wordasword.element"/>
      &lt;/choice>
    &lt;/define>
    &lt;define name="keyword" combine="choice">
      &lt;ref name="dbPara-d-keyword"/>
    &lt;/define>
  &lt;/div>
  &lt;div>
    &lt;a:documentation>ELEMENT TYPE NAME PATTERNS&lt;/a:documentation>
    &lt;define name="para">
      &lt;ref name="para.element"/>
    &lt;/define>
  &lt;/div>
  &lt;div>
    &lt;a:documentation>BASIC DOCUMENT ELEMENT DECLARATIONS (rich text) &lt;/a:documentation>
    &lt;div>
      &lt;a:documentation>LONG NAME: Paragraph&lt;/a:documentation>
      &lt;define name="para.content">
        &lt;zeroOrMore>
          &lt;ref name="para.cnt"/>
        &lt;/zeroOrMore>
      &lt;/define>
      &lt;define name="para.attributes">
        &lt;ref name="univ-atts"/>
        &lt;optional>
          &lt;attribute name="outputclass"/>
        &lt;/optional>
      &lt;/define>
      &lt;define name="para.element">
        &lt;element name="para" dita:longName="DocBook-like Paragraph">
          &lt;a:documentation>This paragraph element (&amp;lt;para>) is an alternative to the DITA
            &amp;lt;p&amp;gt;. Category: Body elements&lt;/a:documentation>
          &lt;ref name="para.attlist"/>
          &lt;ref name="para.content"/>
        &lt;/element>
      &lt;/define>
      &lt;define name="para.attlist" combine="interleave">
        &lt;ref name="para.attributes"/>
      &lt;/define>
    &lt;/div>
  &lt;/div>
  &lt;div>
    &lt;a:documentation> BASE FORM PHRASE TYPES&lt;/a:documentation>
    &lt;div>
      &lt;a:documentation>LONG NAME: Word as Word&lt;/a:documentation>
      &lt;define name="wordasword.content">
        &lt;zeroOrMore>
          &lt;choice>
            &lt;text/>
            &lt;ref name="draft-comment" dita:since="1.3"/>
            &lt;ref name="required-cleanup" dita:since="1.3"/>
            &lt;ref name="text"/>
            &lt;ref name="tm"/>
          &lt;/choice>
        &lt;/zeroOrMore>
      &lt;/define>
      &lt;define name="wordasword.attributes">
        &lt;optional>
          &lt;attribute name="keyref"/>
        &lt;/optional>
        &lt;ref name="univ-atts"/>
        &lt;optional>
          &lt;attribute name="outputclass"/>
        &lt;/optional>
      &lt;/define>
      &lt;define name="wordasword.element">
        &lt;element name="wordasword" dita:longName="Keyword">
          &lt;a:documentation>The &amp;lt;wordasword> element identifies a word as a word, apart from any
            meaning it may have. Category: Body elements&lt;/a:documentation>
          &lt;ref name="wordasword.attlist"/>
          &lt;ref name="wordasword.content"/>
        &lt;/element>
      &lt;/define>
      &lt;define name="wordasword.attlist" combine="interleave">
        &lt;ref name="wordasword.attributes"/>
      &lt;/define>
    &lt;/div>
  &lt;/div>
  &lt;div>
    &lt;a:documentation>SPECIALIZATION ATTRIBUTE DECLARATIONS&lt;/a:documentation>
    &lt;define name="para.attlist" combine="interleave">
      &lt;ref name="global-atts"/>
      &lt;optional>
        &lt;attribute name="class" a:defaultValue="+ topic/p dbPara-d/para "/>
      &lt;/optional>
    &lt;/define>
    &lt;define name="wordasword.attlist" combine="interleave">
      &lt;ref name="global-atts"/>
      &lt;optional>
        &lt;attribute name="class" a:defaultValue="+ topic/keyword dbPara-d/wordasword "/>
      &lt;/optional>
    &lt;/define>
  &lt;/div>
&lt;/grammar></codeblock></p>
	</body>
</subsection>