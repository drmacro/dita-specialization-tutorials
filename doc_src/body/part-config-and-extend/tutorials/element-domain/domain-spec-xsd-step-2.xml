<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE subsection PUBLIC "urn:pubid:dita4practitioners.com:doctypes:dita:subsection" "subsection.dtd"> 
<subsection id="domain-spec-xsd-step-2">
	<title>Integrate the domain into your topic shell</title>
	<shortdesc>blah</shortdesc>
	<prolog>
		<metadata>
			<keywords>
				<indexterm>element domain specialization<indexterm>XSD syntax</indexterm></indexterm>
				<indexterm>XSD<indexterm>element domain specialization</indexterm></indexterm>
			</keywords>
		</metadata>
	</prolog>
	<body>
		<p>To test the module in isolation, create a topic document type shell XSD file in the same
			directory as your domain XSD. Creating a test file one level above lets you create relative
			URLs from the shell XSD to the module so you don't have to set up an entity resolution catalog
			just to test the module. For example, you can just copy the topic.xsd file from the standard
			DITA schema files.</p>
		<p>To integrate the new domain and its elements into your concept topic type, you simply include a
			reference to <filepath>dbParaDomain.xsd</filepath>, then include the groups that refer to the
			elements themselves.</p>
		<p>In your shell XSD, find the section marked <codeph>TOPIC DOMAINS</codeph> and add a new
				<xmlelement>xs:include</xmlelement>:
			<codeblock>&lt;!-- ================ TOPIC DOMAINS ===================== -->
	<b>&lt;xs:include schemaLocation="dbParaDomain.xsd"/></b>

	&lt;xs:include schemaLocation="urn:oasis:names:tc:dita:xsd:abbreviateDomain.xsd:1.3"/>
	&lt;xs:include schemaLocation="urn:oasis:names:tc:dita:xsd:deliveryTargetAttDomain.xsd:1.3"/>
	&lt;xs:include schemaLocation="urn:oasis:names:tc:dita:xsd:equationDomain.xsd:1.3"/>
...</codeblock></p>
		<p>Below that, find the <xmlelement>xs:redefine</xmlelement> and see if there is a
				<xmlelement>xs:group</xmlelement> for the DITA <xmlelement>p</xmlelement>. There is probably
				<i>not</i> one in this file, so to include your new <xmlelement>para</xmlelement>, you will
			need to add one. In <filepath>commonElementGrp.xsd</filepath>, there is one. Copy and paste it
			into this <xmlelement>xs:redefine</xmlelement> and then add a choice for your new
				<xmlelement>para</xmlelement>:
			<codeblock>&lt;xs:group name="p">
	&lt;xs:choice>
		&lt;xs:group ref="p"/>
		<b>&lt;xs:group ref="dbPara-d-p"/></b>
	&lt;/xs:choice>
&lt;/xs:group></codeblock></p>
		<p>Do the same thing for <xmlelement>keyword</xmlelement>:
			<codeblock>&lt;xs:group name="keyword">
	&lt;xs:choice>
		&lt;xs:group ref="keyword"/>
		&lt;xs:group ref="markup-d-keyword"/>
		&lt;xs:group ref="pr-d-keyword"/>
		&lt;xs:group ref="sw-d-keyword"/>
		&lt;xs:group ref="ui-d-keyword"/>
		&lt;xs:group ref="xml-d-keyword"/>
		<b>&lt;xs:group ref="dbPara-d-keyword"/></b>
	&lt;/xs:choice>
&lt;/xs:group></codeblock></p>
		<p>You should be able to add a <xmlelement>para</xmlelement> to your test document in any
			location where a <xmlelement>p</xmlelement> is valid. You should also be able to include a
				<xmlelement>wordasword</xmlelement> element anywhere a <xmlelement>keyword</xmlelement> can
			occur. </p>
	</body>
</subsection>